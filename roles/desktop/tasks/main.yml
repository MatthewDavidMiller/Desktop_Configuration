---
- name: Install packages
  apt:
    name: "{{ packages }}"
    state: latest
    update_cache: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Flush Iptables rules
  ansible.builtin.iptables:
    chain: "{{ item }}"
    flush: yes
  with_items: ["INPUT", "FORWARD", "OUTPUT"]

- name: Allow ssh
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "22"
    source: "{{ ansible_address }}"
    in_interface: "{{ interface_name }}"
    limit: 1/minute
    jump: ACCEPT
  become: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow icmp
  ansible.builtin.iptables:
    chain: INPUT
    protocol: icmp
    source: "{{ network_prefix }}"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
  become: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow icmpv6
  ansible.builtin.iptables:
    chain: INPUT
    protocol: icmpv6
    source: "fe80::/10"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow loopback
  ansible.builtin.iptables:
    chain: INPUT
    source: "127.0.0.1"
    in_interface: lo
    jump: ACCEPT
  become: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow loopback ipv6
  ansible.builtin.iptables:
    chain: INPUT
    source: "::1"
    in_interface: lo
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow established connections
  ansible.builtin.iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
  become: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Drop inbound by default
  ansible.builtin.iptables:
    chain: INPUT
    policy: DROP
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow outbound by default
  ansible.builtin.iptables:
    chain: OUTPUT
    policy: ACCEPT
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Drop forwarding by default
  ansible.builtin.iptables:
    chain: FORWARD
    policy: DROP
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow established connections ipv6
  ansible.builtin.iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Drop inbound by default ipv6
  ansible.builtin.iptables:
    chain: INPUT
    policy: DROP
    ip_version: ipv6
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Allow outbound by default ipv6
  ansible.builtin.iptables:
    chain: OUTPUT
    policy: ACCEPT
    ip_version: ipv6
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Drop forwarding by default ipv6
  ansible.builtin.iptables:
    chain: FORWARD
    policy: DROP
    ip_version: ipv6
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Save Iptables Rules
  community.general.iptables_state:
    ip_version: ipv4
    table: filter
    state: saved
    path: /etc/iptables/rules.v4
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Save Iptables Rules ipv6
  community.general.iptables_state:
    ip_version: ipv6
    table: filter
    state: saved
    path: /etc/iptables/rules.v6
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: SSH configuration
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: "0644"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Install snap packages
  ansible.builtin.shell:
    cmd: |
      snap install "{{ item }}"
  loop: "{{ snap_packages }}"
  when:
    - ansible_facts['distribution'] == 'Ubuntu'

- name: Configure git
  ansible.builtin.shell:
    cmd: |
      git config --global user.name {{ git_name }}
      git config --global user.email {{ email }}
      git config --global core.sshCommand "ssh -i ""/home/{{ user_name }}/.ssh/{{ key }}"" -F /dev/null"
  when:
    - ansible_facts['distribution'] == 'Ubuntu'

- name: Download PowerShell core
  get_url:
    url: "https://packages.microsoft.com/config/ubuntu/{{ ubuntu_version }}/packages-microsoft-prod.deb"
    dest: /tmp
  when:
    - ansible_facts['distribution'] == 'Ubuntu'

- name: Install PowerShell core
  ansible.builtin.shell:
    cmd: |
      dpkg -i '/tmp/packages-microsoft-prod.deb'
      apt-get update
      add-apt-repository universe
      apt-get install -y powershell
  when:
    - ansible_facts['distribution'] == 'Ubuntu'
